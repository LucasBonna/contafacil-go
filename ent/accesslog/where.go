// Code generated by ent, DO NOT EDIT.

package accesslog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/lucasbonna/contafacil_api/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldID, id))
}

// IP applies equality check predicate on the "ip" field. It's identical to IPEQ.
func IP(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldIP, v))
}

// Method applies equality check predicate on the "method" field. It's identical to MethodEQ.
func Method(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldMethod, v))
}

// Endpoint applies equality check predicate on the "endpoint" field. It's identical to EndpointEQ.
func Endpoint(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldEndpoint, v))
}

// RequestBody applies equality check predicate on the "request_body" field. It's identical to RequestBodyEQ.
func RequestBody(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestBody, v))
}

// RequestHeaders applies equality check predicate on the "request_headers" field. It's identical to RequestHeadersEQ.
func RequestHeaders(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestHeaders, v))
}

// RequestParams applies equality check predicate on the "request_params" field. It's identical to RequestParamsEQ.
func RequestParams(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestParams, v))
}

// RequestQuery applies equality check predicate on the "request_query" field. It's identical to RequestQueryEQ.
func RequestQuery(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestQuery, v))
}

// ResponseBody applies equality check predicate on the "response_body" field. It's identical to ResponseBodyEQ.
func ResponseBody(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseBody, v))
}

// ResponseHeaders applies equality check predicate on the "response_headers" field. It's identical to ResponseHeadersEQ.
func ResponseHeaders(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseHeaders, v))
}

// ResponseTime applies equality check predicate on the "response_time" field. It's identical to ResponseTimeEQ.
func ResponseTime(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseTime, v))
}

// StatusCode applies equality check predicate on the "status_code" field. It's identical to StatusCodeEQ.
func StatusCode(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldStatusCode, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// IPEQ applies the EQ predicate on the "ip" field.
func IPEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldIP, v))
}

// IPNEQ applies the NEQ predicate on the "ip" field.
func IPNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldIP, v))
}

// IPIn applies the In predicate on the "ip" field.
func IPIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldIP, vs...))
}

// IPNotIn applies the NotIn predicate on the "ip" field.
func IPNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldIP, vs...))
}

// IPGT applies the GT predicate on the "ip" field.
func IPGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldIP, v))
}

// IPGTE applies the GTE predicate on the "ip" field.
func IPGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldIP, v))
}

// IPLT applies the LT predicate on the "ip" field.
func IPLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldIP, v))
}

// IPLTE applies the LTE predicate on the "ip" field.
func IPLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldIP, v))
}

// IPContains applies the Contains predicate on the "ip" field.
func IPContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldIP, v))
}

// IPHasPrefix applies the HasPrefix predicate on the "ip" field.
func IPHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldIP, v))
}

// IPHasSuffix applies the HasSuffix predicate on the "ip" field.
func IPHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldIP, v))
}

// IPEqualFold applies the EqualFold predicate on the "ip" field.
func IPEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldIP, v))
}

// IPContainsFold applies the ContainsFold predicate on the "ip" field.
func IPContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldIP, v))
}

// MethodEQ applies the EQ predicate on the "method" field.
func MethodEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldMethod, v))
}

// MethodNEQ applies the NEQ predicate on the "method" field.
func MethodNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldMethod, v))
}

// MethodIn applies the In predicate on the "method" field.
func MethodIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldMethod, vs...))
}

// MethodNotIn applies the NotIn predicate on the "method" field.
func MethodNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldMethod, vs...))
}

// MethodGT applies the GT predicate on the "method" field.
func MethodGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldMethod, v))
}

// MethodGTE applies the GTE predicate on the "method" field.
func MethodGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldMethod, v))
}

// MethodLT applies the LT predicate on the "method" field.
func MethodLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldMethod, v))
}

// MethodLTE applies the LTE predicate on the "method" field.
func MethodLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldMethod, v))
}

// MethodContains applies the Contains predicate on the "method" field.
func MethodContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldMethod, v))
}

// MethodHasPrefix applies the HasPrefix predicate on the "method" field.
func MethodHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldMethod, v))
}

// MethodHasSuffix applies the HasSuffix predicate on the "method" field.
func MethodHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldMethod, v))
}

// MethodEqualFold applies the EqualFold predicate on the "method" field.
func MethodEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldMethod, v))
}

// MethodContainsFold applies the ContainsFold predicate on the "method" field.
func MethodContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldMethod, v))
}

// EndpointEQ applies the EQ predicate on the "endpoint" field.
func EndpointEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldEndpoint, v))
}

// EndpointNEQ applies the NEQ predicate on the "endpoint" field.
func EndpointNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldEndpoint, v))
}

// EndpointIn applies the In predicate on the "endpoint" field.
func EndpointIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldEndpoint, vs...))
}

// EndpointNotIn applies the NotIn predicate on the "endpoint" field.
func EndpointNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldEndpoint, vs...))
}

// EndpointGT applies the GT predicate on the "endpoint" field.
func EndpointGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldEndpoint, v))
}

// EndpointGTE applies the GTE predicate on the "endpoint" field.
func EndpointGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldEndpoint, v))
}

// EndpointLT applies the LT predicate on the "endpoint" field.
func EndpointLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldEndpoint, v))
}

// EndpointLTE applies the LTE predicate on the "endpoint" field.
func EndpointLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldEndpoint, v))
}

// EndpointContains applies the Contains predicate on the "endpoint" field.
func EndpointContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldEndpoint, v))
}

// EndpointHasPrefix applies the HasPrefix predicate on the "endpoint" field.
func EndpointHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldEndpoint, v))
}

// EndpointHasSuffix applies the HasSuffix predicate on the "endpoint" field.
func EndpointHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldEndpoint, v))
}

// EndpointEqualFold applies the EqualFold predicate on the "endpoint" field.
func EndpointEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldEndpoint, v))
}

// EndpointContainsFold applies the ContainsFold predicate on the "endpoint" field.
func EndpointContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldEndpoint, v))
}

// RequestBodyEQ applies the EQ predicate on the "request_body" field.
func RequestBodyEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestBody, v))
}

// RequestBodyNEQ applies the NEQ predicate on the "request_body" field.
func RequestBodyNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldRequestBody, v))
}

// RequestBodyIn applies the In predicate on the "request_body" field.
func RequestBodyIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldRequestBody, vs...))
}

// RequestBodyNotIn applies the NotIn predicate on the "request_body" field.
func RequestBodyNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldRequestBody, vs...))
}

// RequestBodyGT applies the GT predicate on the "request_body" field.
func RequestBodyGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldRequestBody, v))
}

// RequestBodyGTE applies the GTE predicate on the "request_body" field.
func RequestBodyGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldRequestBody, v))
}

// RequestBodyLT applies the LT predicate on the "request_body" field.
func RequestBodyLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldRequestBody, v))
}

// RequestBodyLTE applies the LTE predicate on the "request_body" field.
func RequestBodyLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldRequestBody, v))
}

// RequestBodyContains applies the Contains predicate on the "request_body" field.
func RequestBodyContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldRequestBody, v))
}

// RequestBodyHasPrefix applies the HasPrefix predicate on the "request_body" field.
func RequestBodyHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldRequestBody, v))
}

// RequestBodyHasSuffix applies the HasSuffix predicate on the "request_body" field.
func RequestBodyHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldRequestBody, v))
}

// RequestBodyIsNil applies the IsNil predicate on the "request_body" field.
func RequestBodyIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldRequestBody))
}

// RequestBodyNotNil applies the NotNil predicate on the "request_body" field.
func RequestBodyNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldRequestBody))
}

// RequestBodyEqualFold applies the EqualFold predicate on the "request_body" field.
func RequestBodyEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldRequestBody, v))
}

// RequestBodyContainsFold applies the ContainsFold predicate on the "request_body" field.
func RequestBodyContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldRequestBody, v))
}

// RequestHeadersEQ applies the EQ predicate on the "request_headers" field.
func RequestHeadersEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestHeaders, v))
}

// RequestHeadersNEQ applies the NEQ predicate on the "request_headers" field.
func RequestHeadersNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldRequestHeaders, v))
}

// RequestHeadersIn applies the In predicate on the "request_headers" field.
func RequestHeadersIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldRequestHeaders, vs...))
}

// RequestHeadersNotIn applies the NotIn predicate on the "request_headers" field.
func RequestHeadersNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldRequestHeaders, vs...))
}

// RequestHeadersGT applies the GT predicate on the "request_headers" field.
func RequestHeadersGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldRequestHeaders, v))
}

// RequestHeadersGTE applies the GTE predicate on the "request_headers" field.
func RequestHeadersGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldRequestHeaders, v))
}

// RequestHeadersLT applies the LT predicate on the "request_headers" field.
func RequestHeadersLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldRequestHeaders, v))
}

// RequestHeadersLTE applies the LTE predicate on the "request_headers" field.
func RequestHeadersLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldRequestHeaders, v))
}

// RequestHeadersContains applies the Contains predicate on the "request_headers" field.
func RequestHeadersContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldRequestHeaders, v))
}

// RequestHeadersHasPrefix applies the HasPrefix predicate on the "request_headers" field.
func RequestHeadersHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldRequestHeaders, v))
}

// RequestHeadersHasSuffix applies the HasSuffix predicate on the "request_headers" field.
func RequestHeadersHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldRequestHeaders, v))
}

// RequestHeadersIsNil applies the IsNil predicate on the "request_headers" field.
func RequestHeadersIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldRequestHeaders))
}

// RequestHeadersNotNil applies the NotNil predicate on the "request_headers" field.
func RequestHeadersNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldRequestHeaders))
}

// RequestHeadersEqualFold applies the EqualFold predicate on the "request_headers" field.
func RequestHeadersEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldRequestHeaders, v))
}

// RequestHeadersContainsFold applies the ContainsFold predicate on the "request_headers" field.
func RequestHeadersContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldRequestHeaders, v))
}

// RequestParamsEQ applies the EQ predicate on the "request_params" field.
func RequestParamsEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestParams, v))
}

// RequestParamsNEQ applies the NEQ predicate on the "request_params" field.
func RequestParamsNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldRequestParams, v))
}

// RequestParamsIn applies the In predicate on the "request_params" field.
func RequestParamsIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldRequestParams, vs...))
}

// RequestParamsNotIn applies the NotIn predicate on the "request_params" field.
func RequestParamsNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldRequestParams, vs...))
}

// RequestParamsGT applies the GT predicate on the "request_params" field.
func RequestParamsGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldRequestParams, v))
}

// RequestParamsGTE applies the GTE predicate on the "request_params" field.
func RequestParamsGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldRequestParams, v))
}

// RequestParamsLT applies the LT predicate on the "request_params" field.
func RequestParamsLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldRequestParams, v))
}

// RequestParamsLTE applies the LTE predicate on the "request_params" field.
func RequestParamsLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldRequestParams, v))
}

// RequestParamsContains applies the Contains predicate on the "request_params" field.
func RequestParamsContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldRequestParams, v))
}

// RequestParamsHasPrefix applies the HasPrefix predicate on the "request_params" field.
func RequestParamsHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldRequestParams, v))
}

// RequestParamsHasSuffix applies the HasSuffix predicate on the "request_params" field.
func RequestParamsHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldRequestParams, v))
}

// RequestParamsIsNil applies the IsNil predicate on the "request_params" field.
func RequestParamsIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldRequestParams))
}

// RequestParamsNotNil applies the NotNil predicate on the "request_params" field.
func RequestParamsNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldRequestParams))
}

// RequestParamsEqualFold applies the EqualFold predicate on the "request_params" field.
func RequestParamsEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldRequestParams, v))
}

// RequestParamsContainsFold applies the ContainsFold predicate on the "request_params" field.
func RequestParamsContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldRequestParams, v))
}

// RequestQueryEQ applies the EQ predicate on the "request_query" field.
func RequestQueryEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldRequestQuery, v))
}

// RequestQueryNEQ applies the NEQ predicate on the "request_query" field.
func RequestQueryNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldRequestQuery, v))
}

// RequestQueryIn applies the In predicate on the "request_query" field.
func RequestQueryIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldRequestQuery, vs...))
}

// RequestQueryNotIn applies the NotIn predicate on the "request_query" field.
func RequestQueryNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldRequestQuery, vs...))
}

// RequestQueryGT applies the GT predicate on the "request_query" field.
func RequestQueryGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldRequestQuery, v))
}

// RequestQueryGTE applies the GTE predicate on the "request_query" field.
func RequestQueryGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldRequestQuery, v))
}

// RequestQueryLT applies the LT predicate on the "request_query" field.
func RequestQueryLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldRequestQuery, v))
}

// RequestQueryLTE applies the LTE predicate on the "request_query" field.
func RequestQueryLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldRequestQuery, v))
}

// RequestQueryContains applies the Contains predicate on the "request_query" field.
func RequestQueryContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldRequestQuery, v))
}

// RequestQueryHasPrefix applies the HasPrefix predicate on the "request_query" field.
func RequestQueryHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldRequestQuery, v))
}

// RequestQueryHasSuffix applies the HasSuffix predicate on the "request_query" field.
func RequestQueryHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldRequestQuery, v))
}

// RequestQueryIsNil applies the IsNil predicate on the "request_query" field.
func RequestQueryIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldRequestQuery))
}

// RequestQueryNotNil applies the NotNil predicate on the "request_query" field.
func RequestQueryNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldRequestQuery))
}

// RequestQueryEqualFold applies the EqualFold predicate on the "request_query" field.
func RequestQueryEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldRequestQuery, v))
}

// RequestQueryContainsFold applies the ContainsFold predicate on the "request_query" field.
func RequestQueryContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldRequestQuery, v))
}

// ResponseBodyEQ applies the EQ predicate on the "response_body" field.
func ResponseBodyEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseBody, v))
}

// ResponseBodyNEQ applies the NEQ predicate on the "response_body" field.
func ResponseBodyNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldResponseBody, v))
}

// ResponseBodyIn applies the In predicate on the "response_body" field.
func ResponseBodyIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldResponseBody, vs...))
}

// ResponseBodyNotIn applies the NotIn predicate on the "response_body" field.
func ResponseBodyNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldResponseBody, vs...))
}

// ResponseBodyGT applies the GT predicate on the "response_body" field.
func ResponseBodyGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldResponseBody, v))
}

// ResponseBodyGTE applies the GTE predicate on the "response_body" field.
func ResponseBodyGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldResponseBody, v))
}

// ResponseBodyLT applies the LT predicate on the "response_body" field.
func ResponseBodyLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldResponseBody, v))
}

// ResponseBodyLTE applies the LTE predicate on the "response_body" field.
func ResponseBodyLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldResponseBody, v))
}

// ResponseBodyContains applies the Contains predicate on the "response_body" field.
func ResponseBodyContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldResponseBody, v))
}

// ResponseBodyHasPrefix applies the HasPrefix predicate on the "response_body" field.
func ResponseBodyHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldResponseBody, v))
}

// ResponseBodyHasSuffix applies the HasSuffix predicate on the "response_body" field.
func ResponseBodyHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldResponseBody, v))
}

// ResponseBodyIsNil applies the IsNil predicate on the "response_body" field.
func ResponseBodyIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldResponseBody))
}

// ResponseBodyNotNil applies the NotNil predicate on the "response_body" field.
func ResponseBodyNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldResponseBody))
}

// ResponseBodyEqualFold applies the EqualFold predicate on the "response_body" field.
func ResponseBodyEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldResponseBody, v))
}

// ResponseBodyContainsFold applies the ContainsFold predicate on the "response_body" field.
func ResponseBodyContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldResponseBody, v))
}

// ResponseHeadersEQ applies the EQ predicate on the "response_headers" field.
func ResponseHeadersEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseHeaders, v))
}

// ResponseHeadersNEQ applies the NEQ predicate on the "response_headers" field.
func ResponseHeadersNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldResponseHeaders, v))
}

// ResponseHeadersIn applies the In predicate on the "response_headers" field.
func ResponseHeadersIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldResponseHeaders, vs...))
}

// ResponseHeadersNotIn applies the NotIn predicate on the "response_headers" field.
func ResponseHeadersNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldResponseHeaders, vs...))
}

// ResponseHeadersGT applies the GT predicate on the "response_headers" field.
func ResponseHeadersGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldResponseHeaders, v))
}

// ResponseHeadersGTE applies the GTE predicate on the "response_headers" field.
func ResponseHeadersGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldResponseHeaders, v))
}

// ResponseHeadersLT applies the LT predicate on the "response_headers" field.
func ResponseHeadersLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldResponseHeaders, v))
}

// ResponseHeadersLTE applies the LTE predicate on the "response_headers" field.
func ResponseHeadersLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldResponseHeaders, v))
}

// ResponseHeadersContains applies the Contains predicate on the "response_headers" field.
func ResponseHeadersContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldResponseHeaders, v))
}

// ResponseHeadersHasPrefix applies the HasPrefix predicate on the "response_headers" field.
func ResponseHeadersHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldResponseHeaders, v))
}

// ResponseHeadersHasSuffix applies the HasSuffix predicate on the "response_headers" field.
func ResponseHeadersHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldResponseHeaders, v))
}

// ResponseHeadersIsNil applies the IsNil predicate on the "response_headers" field.
func ResponseHeadersIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldResponseHeaders))
}

// ResponseHeadersNotNil applies the NotNil predicate on the "response_headers" field.
func ResponseHeadersNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldResponseHeaders))
}

// ResponseHeadersEqualFold applies the EqualFold predicate on the "response_headers" field.
func ResponseHeadersEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldResponseHeaders, v))
}

// ResponseHeadersContainsFold applies the ContainsFold predicate on the "response_headers" field.
func ResponseHeadersContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldResponseHeaders, v))
}

// ResponseTimeEQ applies the EQ predicate on the "response_time" field.
func ResponseTimeEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldResponseTime, v))
}

// ResponseTimeNEQ applies the NEQ predicate on the "response_time" field.
func ResponseTimeNEQ(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldResponseTime, v))
}

// ResponseTimeIn applies the In predicate on the "response_time" field.
func ResponseTimeIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldResponseTime, vs...))
}

// ResponseTimeNotIn applies the NotIn predicate on the "response_time" field.
func ResponseTimeNotIn(vs ...string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldResponseTime, vs...))
}

// ResponseTimeGT applies the GT predicate on the "response_time" field.
func ResponseTimeGT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldResponseTime, v))
}

// ResponseTimeGTE applies the GTE predicate on the "response_time" field.
func ResponseTimeGTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldResponseTime, v))
}

// ResponseTimeLT applies the LT predicate on the "response_time" field.
func ResponseTimeLT(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldResponseTime, v))
}

// ResponseTimeLTE applies the LTE predicate on the "response_time" field.
func ResponseTimeLTE(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldResponseTime, v))
}

// ResponseTimeContains applies the Contains predicate on the "response_time" field.
func ResponseTimeContains(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContains(FieldResponseTime, v))
}

// ResponseTimeHasPrefix applies the HasPrefix predicate on the "response_time" field.
func ResponseTimeHasPrefix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasPrefix(FieldResponseTime, v))
}

// ResponseTimeHasSuffix applies the HasSuffix predicate on the "response_time" field.
func ResponseTimeHasSuffix(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldHasSuffix(FieldResponseTime, v))
}

// ResponseTimeIsNil applies the IsNil predicate on the "response_time" field.
func ResponseTimeIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldResponseTime))
}

// ResponseTimeNotNil applies the NotNil predicate on the "response_time" field.
func ResponseTimeNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldResponseTime))
}

// ResponseTimeEqualFold applies the EqualFold predicate on the "response_time" field.
func ResponseTimeEqualFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEqualFold(FieldResponseTime, v))
}

// ResponseTimeContainsFold applies the ContainsFold predicate on the "response_time" field.
func ResponseTimeContainsFold(v string) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldContainsFold(FieldResponseTime, v))
}

// StatusCodeEQ applies the EQ predicate on the "status_code" field.
func StatusCodeEQ(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldStatusCode, v))
}

// StatusCodeNEQ applies the NEQ predicate on the "status_code" field.
func StatusCodeNEQ(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldStatusCode, v))
}

// StatusCodeIn applies the In predicate on the "status_code" field.
func StatusCodeIn(vs ...int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldStatusCode, vs...))
}

// StatusCodeNotIn applies the NotIn predicate on the "status_code" field.
func StatusCodeNotIn(vs ...int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldStatusCode, vs...))
}

// StatusCodeGT applies the GT predicate on the "status_code" field.
func StatusCodeGT(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldStatusCode, v))
}

// StatusCodeGTE applies the GTE predicate on the "status_code" field.
func StatusCodeGTE(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldStatusCode, v))
}

// StatusCodeLT applies the LT predicate on the "status_code" field.
func StatusCodeLT(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldStatusCode, v))
}

// StatusCodeLTE applies the LTE predicate on the "status_code" field.
func StatusCodeLTE(v int) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldStatusCode, v))
}

// StatusCodeIsNil applies the IsNil predicate on the "status_code" field.
func StatusCodeIsNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIsNull(FieldStatusCode))
}

// StatusCodeNotNil applies the NotNil predicate on the "status_code" field.
func StatusCodeNotNil() predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotNull(FieldStatusCode))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.AccessLog {
	return predicate.AccessLog(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AccessLog) predicate.AccessLog {
	return predicate.AccessLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AccessLog) predicate.AccessLog {
	return predicate.AccessLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AccessLog) predicate.AccessLog {
	return predicate.AccessLog(sql.NotPredicates(p))
}
