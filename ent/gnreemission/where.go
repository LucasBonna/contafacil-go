// Code generated by ent, DO NOT EDIT.

package gnreemission

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/lucasbonna/contafacil_api/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldID, id))
}

// XML applies equality check predicate on the "xml" field. It's identical to XMLEQ.
func XML(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldXML, v))
}

// Pdf applies equality check predicate on the "pdf" field. It's identical to PdfEQ.
func Pdf(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldPdf, v))
}

// ComprovantePdf applies equality check predicate on the "comprovante_pdf" field. It's identical to ComprovantePdfEQ.
func ComprovantePdf(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldComprovantePdf, v))
}

// GuiaAmount applies equality check predicate on the "guia_amount" field. It's identical to GuiaAmountEQ.
func GuiaAmount(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldGuiaAmount, v))
}

// NumeroRecibo applies equality check predicate on the "numero_recibo" field. It's identical to NumeroReciboEQ.
func NumeroRecibo(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldNumeroRecibo, v))
}

// ChaveNota applies equality check predicate on the "chave_nota" field. It's identical to ChaveNotaEQ.
func ChaveNota(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldChaveNota, v))
}

// CodBarrasGuia applies equality check predicate on the "cod_barras_guia" field. It's identical to CodBarrasGuiaEQ.
func CodBarrasGuia(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldCodBarrasGuia, v))
}

// NumNota applies equality check predicate on the "num_nota" field. It's identical to NumNotaEQ.
func NumNota(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldNumNota, v))
}

// Destinatario applies equality check predicate on the "destinatario" field. It's identical to DestinatarioEQ.
func Destinatario(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldDestinatario, v))
}

// CpfCnpj applies equality check predicate on the "cpf_cnpj" field. It's identical to CpfCnpjEQ.
func CpfCnpj(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldCpfCnpj, v))
}

// XMLEQ applies the EQ predicate on the "xml" field.
func XMLEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldXML, v))
}

// XMLNEQ applies the NEQ predicate on the "xml" field.
func XMLNEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldXML, v))
}

// XMLIn applies the In predicate on the "xml" field.
func XMLIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldXML, vs...))
}

// XMLNotIn applies the NotIn predicate on the "xml" field.
func XMLNotIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldXML, vs...))
}

// XMLGT applies the GT predicate on the "xml" field.
func XMLGT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldXML, v))
}

// XMLGTE applies the GTE predicate on the "xml" field.
func XMLGTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldXML, v))
}

// XMLLT applies the LT predicate on the "xml" field.
func XMLLT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldXML, v))
}

// XMLLTE applies the LTE predicate on the "xml" field.
func XMLLTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldXML, v))
}

// PdfEQ applies the EQ predicate on the "pdf" field.
func PdfEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldPdf, v))
}

// PdfNEQ applies the NEQ predicate on the "pdf" field.
func PdfNEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldPdf, v))
}

// PdfIn applies the In predicate on the "pdf" field.
func PdfIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldPdf, vs...))
}

// PdfNotIn applies the NotIn predicate on the "pdf" field.
func PdfNotIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldPdf, vs...))
}

// PdfGT applies the GT predicate on the "pdf" field.
func PdfGT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldPdf, v))
}

// PdfGTE applies the GTE predicate on the "pdf" field.
func PdfGTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldPdf, v))
}

// PdfLT applies the LT predicate on the "pdf" field.
func PdfLT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldPdf, v))
}

// PdfLTE applies the LTE predicate on the "pdf" field.
func PdfLTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldPdf, v))
}

// PdfIsNil applies the IsNil predicate on the "pdf" field.
func PdfIsNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIsNull(FieldPdf))
}

// PdfNotNil applies the NotNil predicate on the "pdf" field.
func PdfNotNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotNull(FieldPdf))
}

// ComprovantePdfEQ applies the EQ predicate on the "comprovante_pdf" field.
func ComprovantePdfEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldComprovantePdf, v))
}

// ComprovantePdfNEQ applies the NEQ predicate on the "comprovante_pdf" field.
func ComprovantePdfNEQ(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldComprovantePdf, v))
}

// ComprovantePdfIn applies the In predicate on the "comprovante_pdf" field.
func ComprovantePdfIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldComprovantePdf, vs...))
}

// ComprovantePdfNotIn applies the NotIn predicate on the "comprovante_pdf" field.
func ComprovantePdfNotIn(vs ...uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldComprovantePdf, vs...))
}

// ComprovantePdfGT applies the GT predicate on the "comprovante_pdf" field.
func ComprovantePdfGT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldComprovantePdf, v))
}

// ComprovantePdfGTE applies the GTE predicate on the "comprovante_pdf" field.
func ComprovantePdfGTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldComprovantePdf, v))
}

// ComprovantePdfLT applies the LT predicate on the "comprovante_pdf" field.
func ComprovantePdfLT(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldComprovantePdf, v))
}

// ComprovantePdfLTE applies the LTE predicate on the "comprovante_pdf" field.
func ComprovantePdfLTE(v uuid.UUID) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldComprovantePdf, v))
}

// ComprovantePdfIsNil applies the IsNil predicate on the "comprovante_pdf" field.
func ComprovantePdfIsNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIsNull(FieldComprovantePdf))
}

// ComprovantePdfNotNil applies the NotNil predicate on the "comprovante_pdf" field.
func ComprovantePdfNotNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotNull(FieldComprovantePdf))
}

// GuiaAmountEQ applies the EQ predicate on the "guia_amount" field.
func GuiaAmountEQ(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldGuiaAmount, v))
}

// GuiaAmountNEQ applies the NEQ predicate on the "guia_amount" field.
func GuiaAmountNEQ(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldGuiaAmount, v))
}

// GuiaAmountIn applies the In predicate on the "guia_amount" field.
func GuiaAmountIn(vs ...float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldGuiaAmount, vs...))
}

// GuiaAmountNotIn applies the NotIn predicate on the "guia_amount" field.
func GuiaAmountNotIn(vs ...float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldGuiaAmount, vs...))
}

// GuiaAmountGT applies the GT predicate on the "guia_amount" field.
func GuiaAmountGT(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldGuiaAmount, v))
}

// GuiaAmountGTE applies the GTE predicate on the "guia_amount" field.
func GuiaAmountGTE(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldGuiaAmount, v))
}

// GuiaAmountLT applies the LT predicate on the "guia_amount" field.
func GuiaAmountLT(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldGuiaAmount, v))
}

// GuiaAmountLTE applies the LTE predicate on the "guia_amount" field.
func GuiaAmountLTE(v float64) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldGuiaAmount, v))
}

// NumeroReciboEQ applies the EQ predicate on the "numero_recibo" field.
func NumeroReciboEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldNumeroRecibo, v))
}

// NumeroReciboNEQ applies the NEQ predicate on the "numero_recibo" field.
func NumeroReciboNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldNumeroRecibo, v))
}

// NumeroReciboIn applies the In predicate on the "numero_recibo" field.
func NumeroReciboIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldNumeroRecibo, vs...))
}

// NumeroReciboNotIn applies the NotIn predicate on the "numero_recibo" field.
func NumeroReciboNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldNumeroRecibo, vs...))
}

// NumeroReciboGT applies the GT predicate on the "numero_recibo" field.
func NumeroReciboGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldNumeroRecibo, v))
}

// NumeroReciboGTE applies the GTE predicate on the "numero_recibo" field.
func NumeroReciboGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldNumeroRecibo, v))
}

// NumeroReciboLT applies the LT predicate on the "numero_recibo" field.
func NumeroReciboLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldNumeroRecibo, v))
}

// NumeroReciboLTE applies the LTE predicate on the "numero_recibo" field.
func NumeroReciboLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldNumeroRecibo, v))
}

// NumeroReciboContains applies the Contains predicate on the "numero_recibo" field.
func NumeroReciboContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldNumeroRecibo, v))
}

// NumeroReciboHasPrefix applies the HasPrefix predicate on the "numero_recibo" field.
func NumeroReciboHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldNumeroRecibo, v))
}

// NumeroReciboHasSuffix applies the HasSuffix predicate on the "numero_recibo" field.
func NumeroReciboHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldNumeroRecibo, v))
}

// NumeroReciboIsNil applies the IsNil predicate on the "numero_recibo" field.
func NumeroReciboIsNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIsNull(FieldNumeroRecibo))
}

// NumeroReciboNotNil applies the NotNil predicate on the "numero_recibo" field.
func NumeroReciboNotNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotNull(FieldNumeroRecibo))
}

// NumeroReciboEqualFold applies the EqualFold predicate on the "numero_recibo" field.
func NumeroReciboEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldNumeroRecibo, v))
}

// NumeroReciboContainsFold applies the ContainsFold predicate on the "numero_recibo" field.
func NumeroReciboContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldNumeroRecibo, v))
}

// ChaveNotaEQ applies the EQ predicate on the "chave_nota" field.
func ChaveNotaEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldChaveNota, v))
}

// ChaveNotaNEQ applies the NEQ predicate on the "chave_nota" field.
func ChaveNotaNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldChaveNota, v))
}

// ChaveNotaIn applies the In predicate on the "chave_nota" field.
func ChaveNotaIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldChaveNota, vs...))
}

// ChaveNotaNotIn applies the NotIn predicate on the "chave_nota" field.
func ChaveNotaNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldChaveNota, vs...))
}

// ChaveNotaGT applies the GT predicate on the "chave_nota" field.
func ChaveNotaGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldChaveNota, v))
}

// ChaveNotaGTE applies the GTE predicate on the "chave_nota" field.
func ChaveNotaGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldChaveNota, v))
}

// ChaveNotaLT applies the LT predicate on the "chave_nota" field.
func ChaveNotaLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldChaveNota, v))
}

// ChaveNotaLTE applies the LTE predicate on the "chave_nota" field.
func ChaveNotaLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldChaveNota, v))
}

// ChaveNotaContains applies the Contains predicate on the "chave_nota" field.
func ChaveNotaContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldChaveNota, v))
}

// ChaveNotaHasPrefix applies the HasPrefix predicate on the "chave_nota" field.
func ChaveNotaHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldChaveNota, v))
}

// ChaveNotaHasSuffix applies the HasSuffix predicate on the "chave_nota" field.
func ChaveNotaHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldChaveNota, v))
}

// ChaveNotaEqualFold applies the EqualFold predicate on the "chave_nota" field.
func ChaveNotaEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldChaveNota, v))
}

// ChaveNotaContainsFold applies the ContainsFold predicate on the "chave_nota" field.
func ChaveNotaContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldChaveNota, v))
}

// CodBarrasGuiaEQ applies the EQ predicate on the "cod_barras_guia" field.
func CodBarrasGuiaEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaNEQ applies the NEQ predicate on the "cod_barras_guia" field.
func CodBarrasGuiaNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaIn applies the In predicate on the "cod_barras_guia" field.
func CodBarrasGuiaIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldCodBarrasGuia, vs...))
}

// CodBarrasGuiaNotIn applies the NotIn predicate on the "cod_barras_guia" field.
func CodBarrasGuiaNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldCodBarrasGuia, vs...))
}

// CodBarrasGuiaGT applies the GT predicate on the "cod_barras_guia" field.
func CodBarrasGuiaGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaGTE applies the GTE predicate on the "cod_barras_guia" field.
func CodBarrasGuiaGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaLT applies the LT predicate on the "cod_barras_guia" field.
func CodBarrasGuiaLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaLTE applies the LTE predicate on the "cod_barras_guia" field.
func CodBarrasGuiaLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaContains applies the Contains predicate on the "cod_barras_guia" field.
func CodBarrasGuiaContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaHasPrefix applies the HasPrefix predicate on the "cod_barras_guia" field.
func CodBarrasGuiaHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaHasSuffix applies the HasSuffix predicate on the "cod_barras_guia" field.
func CodBarrasGuiaHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaIsNil applies the IsNil predicate on the "cod_barras_guia" field.
func CodBarrasGuiaIsNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIsNull(FieldCodBarrasGuia))
}

// CodBarrasGuiaNotNil applies the NotNil predicate on the "cod_barras_guia" field.
func CodBarrasGuiaNotNil() predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotNull(FieldCodBarrasGuia))
}

// CodBarrasGuiaEqualFold applies the EqualFold predicate on the "cod_barras_guia" field.
func CodBarrasGuiaEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldCodBarrasGuia, v))
}

// CodBarrasGuiaContainsFold applies the ContainsFold predicate on the "cod_barras_guia" field.
func CodBarrasGuiaContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldCodBarrasGuia, v))
}

// NumNotaEQ applies the EQ predicate on the "num_nota" field.
func NumNotaEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldNumNota, v))
}

// NumNotaNEQ applies the NEQ predicate on the "num_nota" field.
func NumNotaNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldNumNota, v))
}

// NumNotaIn applies the In predicate on the "num_nota" field.
func NumNotaIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldNumNota, vs...))
}

// NumNotaNotIn applies the NotIn predicate on the "num_nota" field.
func NumNotaNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldNumNota, vs...))
}

// NumNotaGT applies the GT predicate on the "num_nota" field.
func NumNotaGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldNumNota, v))
}

// NumNotaGTE applies the GTE predicate on the "num_nota" field.
func NumNotaGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldNumNota, v))
}

// NumNotaLT applies the LT predicate on the "num_nota" field.
func NumNotaLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldNumNota, v))
}

// NumNotaLTE applies the LTE predicate on the "num_nota" field.
func NumNotaLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldNumNota, v))
}

// NumNotaContains applies the Contains predicate on the "num_nota" field.
func NumNotaContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldNumNota, v))
}

// NumNotaHasPrefix applies the HasPrefix predicate on the "num_nota" field.
func NumNotaHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldNumNota, v))
}

// NumNotaHasSuffix applies the HasSuffix predicate on the "num_nota" field.
func NumNotaHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldNumNota, v))
}

// NumNotaEqualFold applies the EqualFold predicate on the "num_nota" field.
func NumNotaEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldNumNota, v))
}

// NumNotaContainsFold applies the ContainsFold predicate on the "num_nota" field.
func NumNotaContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldNumNota, v))
}

// DestinatarioEQ applies the EQ predicate on the "destinatario" field.
func DestinatarioEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldDestinatario, v))
}

// DestinatarioNEQ applies the NEQ predicate on the "destinatario" field.
func DestinatarioNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldDestinatario, v))
}

// DestinatarioIn applies the In predicate on the "destinatario" field.
func DestinatarioIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldDestinatario, vs...))
}

// DestinatarioNotIn applies the NotIn predicate on the "destinatario" field.
func DestinatarioNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldDestinatario, vs...))
}

// DestinatarioGT applies the GT predicate on the "destinatario" field.
func DestinatarioGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldDestinatario, v))
}

// DestinatarioGTE applies the GTE predicate on the "destinatario" field.
func DestinatarioGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldDestinatario, v))
}

// DestinatarioLT applies the LT predicate on the "destinatario" field.
func DestinatarioLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldDestinatario, v))
}

// DestinatarioLTE applies the LTE predicate on the "destinatario" field.
func DestinatarioLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldDestinatario, v))
}

// DestinatarioContains applies the Contains predicate on the "destinatario" field.
func DestinatarioContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldDestinatario, v))
}

// DestinatarioHasPrefix applies the HasPrefix predicate on the "destinatario" field.
func DestinatarioHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldDestinatario, v))
}

// DestinatarioHasSuffix applies the HasSuffix predicate on the "destinatario" field.
func DestinatarioHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldDestinatario, v))
}

// DestinatarioEqualFold applies the EqualFold predicate on the "destinatario" field.
func DestinatarioEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldDestinatario, v))
}

// DestinatarioContainsFold applies the ContainsFold predicate on the "destinatario" field.
func DestinatarioContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldDestinatario, v))
}

// CpfCnpjEQ applies the EQ predicate on the "cpf_cnpj" field.
func CpfCnpjEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEQ(FieldCpfCnpj, v))
}

// CpfCnpjNEQ applies the NEQ predicate on the "cpf_cnpj" field.
func CpfCnpjNEQ(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNEQ(FieldCpfCnpj, v))
}

// CpfCnpjIn applies the In predicate on the "cpf_cnpj" field.
func CpfCnpjIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldIn(FieldCpfCnpj, vs...))
}

// CpfCnpjNotIn applies the NotIn predicate on the "cpf_cnpj" field.
func CpfCnpjNotIn(vs ...string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldNotIn(FieldCpfCnpj, vs...))
}

// CpfCnpjGT applies the GT predicate on the "cpf_cnpj" field.
func CpfCnpjGT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGT(FieldCpfCnpj, v))
}

// CpfCnpjGTE applies the GTE predicate on the "cpf_cnpj" field.
func CpfCnpjGTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldGTE(FieldCpfCnpj, v))
}

// CpfCnpjLT applies the LT predicate on the "cpf_cnpj" field.
func CpfCnpjLT(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLT(FieldCpfCnpj, v))
}

// CpfCnpjLTE applies the LTE predicate on the "cpf_cnpj" field.
func CpfCnpjLTE(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldLTE(FieldCpfCnpj, v))
}

// CpfCnpjContains applies the Contains predicate on the "cpf_cnpj" field.
func CpfCnpjContains(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContains(FieldCpfCnpj, v))
}

// CpfCnpjHasPrefix applies the HasPrefix predicate on the "cpf_cnpj" field.
func CpfCnpjHasPrefix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasPrefix(FieldCpfCnpj, v))
}

// CpfCnpjHasSuffix applies the HasSuffix predicate on the "cpf_cnpj" field.
func CpfCnpjHasSuffix(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldHasSuffix(FieldCpfCnpj, v))
}

// CpfCnpjEqualFold applies the EqualFold predicate on the "cpf_cnpj" field.
func CpfCnpjEqualFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldEqualFold(FieldCpfCnpj, v))
}

// CpfCnpjContainsFold applies the ContainsFold predicate on the "cpf_cnpj" field.
func CpfCnpjContainsFold(v string) predicate.GnreEmission {
	return predicate.GnreEmission(sql.FieldContainsFold(FieldCpfCnpj, v))
}

// HasEmission applies the HasEdge predicate on the "emission" edge.
func HasEmission() predicate.GnreEmission {
	return predicate.GnreEmission(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, EmissionTable, EmissionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasEmissionWith applies the HasEdge predicate on the "emission" edge with a given conditions (other predicates).
func HasEmissionWith(preds ...predicate.Emission) predicate.GnreEmission {
	return predicate.GnreEmission(func(s *sql.Selector) {
		step := newEmissionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GnreEmission) predicate.GnreEmission {
	return predicate.GnreEmission(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GnreEmission) predicate.GnreEmission {
	return predicate.GnreEmission(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GnreEmission) predicate.GnreEmission {
	return predicate.GnreEmission(sql.NotPredicates(p))
}
