// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/lucasbonna/contafacil_api/ent/accesslog"
	"github.com/lucasbonna/contafacil_api/ent/clients"
	"github.com/lucasbonna/contafacil_api/ent/emission"
	"github.com/lucasbonna/contafacil_api/ent/file"
	"github.com/lucasbonna/contafacil_api/ent/gnreemission"
	"github.com/lucasbonna/contafacil_api/ent/schema"
	"github.com/lucasbonna/contafacil_api/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accesslogFields := schema.AccessLog{}.Fields()
	_ = accesslogFields
	// accesslogDescResponseTime is the schema descriptor for response_time field.
	accesslogDescResponseTime := accesslogFields[10].Descriptor()
	// accesslog.ResponseTimeValidator is a validator for the "response_time" field. It is called by the builders before save.
	accesslog.ResponseTimeValidator = accesslogDescResponseTime.Validators[0].(func(string) error)
	// accesslogDescCreatedAt is the schema descriptor for created_at field.
	accesslogDescCreatedAt := accesslogFields[12].Descriptor()
	// accesslog.DefaultCreatedAt holds the default value on creation for the created_at field.
	accesslog.DefaultCreatedAt = accesslogDescCreatedAt.Default.(time.Time)
	// accesslogDescUpdatedAt is the schema descriptor for updated_at field.
	accesslogDescUpdatedAt := accesslogFields[13].Descriptor()
	// accesslog.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	accesslog.DefaultUpdatedAt = accesslogDescUpdatedAt.Default.(time.Time)
	clientsFields := schema.Clients{}.Fields()
	_ = clientsFields
	// clientsDescName is the schema descriptor for name field.
	clientsDescName := clientsFields[1].Descriptor()
	// clients.NameValidator is a validator for the "name" field. It is called by the builders before save.
	clients.NameValidator = clientsDescName.Validators[0].(func(string) error)
	// clientsDescCnpj is the schema descriptor for cnpj field.
	clientsDescCnpj := clientsFields[2].Descriptor()
	// clients.CnpjValidator is a validator for the "cnpj" field. It is called by the builders before save.
	clients.CnpjValidator = clientsDescCnpj.Validators[0].(func(string) error)
	// clientsDescCreatedAt is the schema descriptor for created_at field.
	clientsDescCreatedAt := clientsFields[4].Descriptor()
	// clients.DefaultCreatedAt holds the default value on creation for the created_at field.
	clients.DefaultCreatedAt = clientsDescCreatedAt.Default.(func() time.Time)
	// clientsDescUpdatedAt is the schema descriptor for updated_at field.
	clientsDescUpdatedAt := clientsFields[5].Descriptor()
	// clients.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	clients.DefaultUpdatedAt = clientsDescUpdatedAt.Default.(func() time.Time)
	emissionFields := schema.Emission{}.Fields()
	_ = emissionFields
	// emissionDescCreatedAt is the schema descriptor for created_at field.
	emissionDescCreatedAt := emissionFields[6].Descriptor()
	// emission.DefaultCreatedAt holds the default value on creation for the created_at field.
	emission.DefaultCreatedAt = emissionDescCreatedAt.Default.(time.Time)
	// emissionDescUpdatedAt is the schema descriptor for updated_at field.
	emissionDescUpdatedAt := emissionFields[7].Descriptor()
	// emission.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	emission.DefaultUpdatedAt = emissionDescUpdatedAt.Default.(time.Time)
	fileFields := schema.File{}.Fields()
	_ = fileFields
	// fileDescExtension is the schema descriptor for extension field.
	fileDescExtension := fileFields[2].Descriptor()
	// file.ExtensionValidator is a validator for the "extension" field. It is called by the builders before save.
	file.ExtensionValidator = fileDescExtension.Validators[0].(func(string) error)
	// fileDescContentType is the schema descriptor for content_type field.
	fileDescContentType := fileFields[3].Descriptor()
	// file.ContentTypeValidator is a validator for the "content_type" field. It is called by the builders before save.
	file.ContentTypeValidator = fileDescContentType.Validators[0].(func(string) error)
	// fileDescCreatedAt is the schema descriptor for created_at field.
	fileDescCreatedAt := fileFields[5].Descriptor()
	// file.DefaultCreatedAt holds the default value on creation for the created_at field.
	file.DefaultCreatedAt = fileDescCreatedAt.Default.(time.Time)
	// fileDescUpdatedAt is the schema descriptor for updated_at field.
	fileDescUpdatedAt := fileFields[6].Descriptor()
	// file.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	file.DefaultUpdatedAt = fileDescUpdatedAt.Default.(time.Time)
	gnreemissionFields := schema.GnreEmission{}.Fields()
	_ = gnreemissionFields
	// gnreemissionDescGuiaAmount is the schema descriptor for guia_amount field.
	gnreemissionDescGuiaAmount := gnreemissionFields[4].Descriptor()
	// gnreemission.GuiaAmountValidator is a validator for the "guia_amount" field. It is called by the builders before save.
	gnreemission.GuiaAmountValidator = gnreemissionDescGuiaAmount.Validators[0].(func(float64) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[7].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(time.Time)
}
